<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>seleccion = control.seleccion;
view_object[0] = id;
view_hborder[0] = 32;
view_vborder[0] = 32;
instance_create(0, 0, cuadricula);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>control.seleccion = seleccion;
with(cuadricula){
    instance_destroy();
}
instance_create(mouse_x, mouse_y, ratonlupa);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pasoalgo;
pasoalgo = false;

x = mouse_x;
y = mouse_y;
move_snap(48,32);
depth = (y + 1) * -10;

if(keyboard_check_pressed(vk_anykey)){
    switch(keyboard_key){
        case vk_escape:
        case vk_space:
            audio_play_sound(a_cambio, 20, false);
            pasoalgo = true;
            instance_destroy();
        break;
        case ord('T'):
            if(!instance_exists(todoinfo)){
                instance_create(0, 0, todoinfo);
                pasoalgo = true;
            }
        break;
        case ord('R'):
            if(control.priori == 5){
                control.priori = 0;
            }
            else{
                control.priori += 1;
            }
            pasoalgo = true;
        break;
        case vk_backspace:
            seleccion = -1;
            audio_play_sound(a_multiple, 18, false);
            pasoalgo = true;
        break;
        case vk_right:
            if(seleccion == m_construcciones - 1){
                seleccion = -1;
            }
            else{
                seleccion += 1;
            }
            audio_play_sound(a_multiple, 5, false);
            pasoalgo = true;
        break;
        case vk_left:
            if(seleccion == -1){
                seleccion = m_construcciones - 1;
            }
            else{
                seleccion -= 1;
            }
            audio_play_sound(a_multiple, 5, false);
            pasoalgo = true;
        break;
        case ord('N'):
            if(instance_exists(o_laboratorio) and instance_exists(o_bombardero)){
                if(fondos &gt;= 6 * nuevaunidad){
                    if(instance_number(o_interceptor) &lt; tabla[10,6]){
                        fondos -= 6 * nuevaunidad;
                        var lim, aux;
                        lim = instance_find(o_laboratorio, irandom(tabla[10,6] - 1));
                        aux = instance_create(lim.x, lim.y, o_interceptor);
                        aux.raiz = lim;
                        s_notificacion(27, "");
                        pasoalgo = true;
                    }
                }
            }
        break;
        case ord('G'):
            pasoalgo = s_reclutarnuevos("G");
        break;
        case ord('U'):
            pasoalgo = s_reclutarnuevos("U");
        break;
        case ord('L'):
            pasoalgo = s_reclutarnuevos("L");
        break;
    }
}

if(pasoalgo){
    //nothing
}
else if(keyboard_check(ord('E')) or mouse_wheel_down()){
    if(seleccion == m_construcciones - 1){
        seleccion = -1;
    }
    else{
        seleccion += 1;
    }
    audio_play_sound(a_multiple, 5, false);
}
else if(keyboard_check(ord('Q')) or mouse_wheel_up()){
    if(seleccion == -1){
        seleccion = m_construcciones - 1;
    }
    else{
        seleccion -= 1;
    }
    audio_play_sound(a_multiple, 5, false);
}
else if(mouse_check_button_pressed(mb_left)){
    if(!instance_exists(todoinfo)){
        if(point_distance(mouse_x, mouse_y, view_xview[0] + 56, view_yview[0] + view_hview[0] - 80) &lt; m_radiobuton){
            seleccion = -1;
            audio_play_sound(a_multiple, 18, false);
        }
        else if(point_distance(mouse_x, mouse_y, view_xview[0] + 56, view_yview[0] + view_hview[0] - 32) &lt; m_radiobuton){
            audio_play_sound(a_cambio, 20, false);
            instance_destroy();
        }
        else if(mouse_x &gt; view_xview[0] + 112){
            var aux;
            if(seleccion == -1){
                aux = collision_point(x, y, bloques, 1, 1);
                if(!aux){
                    aux = collision_point(x, y, o_piramide, 1, 1);
                }
                if(aux){
                    if(aux.x == x and aux.y == y and fondos &gt;= preciobulldozer){
                        s_plata(-preciobulldozer);
                        with(aux){
                            var mnch;
                            mnch = instance_create(x, y, mancha);
                            mnch.clase = 1;
                            instance_create(x, y, o_polvo);
                            if(object_index == o_piramide){
                                s_plata(80 * tabla[14,5] + preciobulldozer);
                            }
                            instance_destroy();
                        }
                        audio_play_sound(a_demoler, 20, false);
                        s_logrado(6);
                    }
                }
            }
            else if( (fondos &gt;= tabla[seleccion,5] or (seleccion == 14 and
                    tabla[14,6] == 0) ) and dispo[seleccion] == 1){
                if(x &gt;= 176 and x &lt;= room_width - 128 and y &gt;= 192 and y &lt;= room_height - 96){
                    if(!tile_layer_find(2000, x - 24, y - 16) and !tile_layer_find(2000, x - 24, y + 16) and
                            !tile_layer_find(2000, x + 24, y - 16) and !tile_layer_find(2000, x + 24, y + 16)){
                        if(!collision_rectangle(x - 68, y - 52, x + 68, y + 52, bloques, 1, 1) and
                                !collision_rectangle(x - 68, y - 52, x + 68, y + 52, otrosbloques, 1, 1)){
                            switch(seleccion){
                                case 0:
                                    instance_create(x, y, o_coliseo); break;
                                case 1:
                                    instance_create(x, y, o_teatro); break;
                                case 2:
                                    instance_create(x, y, o_templo); break;
                                case 3:
                                    instance_create(x, y, o_hospital); break;
                                case 4:
                                    instance_create(x, y, o_casino); break;
                                case 5:
                                    instance_create(x, y, o_empresa); break;
                                case 6:
                                    instance_create(x, y, o_fabrica); break;
                                case 7:
                                    instance_create(x, y, o_puerto); break;
                                case 8:
                                    instance_create(x, y, o_comercio); break;
                                case 9:
                                    instance_create(x, y, o_universidad); break;
                                case 10:
                                    instance_create(x, y, o_laboratorio); break;
                                case 11:
                                    if(tabla[11,6] == 0){
                                        instance_create(x, y, o_gobernacion);
                                    }
                                    break;
                                case 12:
                                    instance_create(x, y, o_cuartel); break;
                                case 13:
                                    instance_create(x, y, o_estacion); break;
                                case 14:
                                    if(tabla[14,6] == 0){
                                        fondos += tabla[14,5];
                                    }
                                    instance_create(x, y, o_choza);
                                    break;
                                case 15:
                                    instance_create(x, y, o_palomera); break;
                                case 16:
                                    instance_create(x, y, o_casa); break;
                                case 17:
                                    instance_create(x, y, o_doblecasa); break;
                                case 18:
                                    instance_create(x, y, o_casota); break;
                                case 19:
                                    instance_create(x, y, o_mansion); break;
                                case 20:
                                    instance_create(x, y, o_condominio); break;
                                case 21:
                                    instance_create(x, y, o_edificio); break;
                                case 22:
                                    instance_create(x, y, o_futurista); break;
                                case 23:
                                    instance_create(x, y, o_exotica); break;
                                case 24:
                                    instance_create(x, y, o_subterranea); break;
                                case 25:
                                    instance_create(x, y, o_guarida); break;
                                case 26:
                                    instance_create(x, y, o_hotel); break;
                                case 27:
                                    instance_create(x, y, o_aeropuerto); break;
                                case 28:
                                    instance_create(x, y, o_cultivo); break;
                                case 29:
                                    instance_create(x, y, o_restaurante); break;
                                case 30:
                                    instance_create(x, y, o_parque); break;
                                case 31:
                                    instance_create(x, y, o_cementerio); break;
                                case 32:
                                    instance_create(x, y, o_dinoparque); break;
                                case 33:
                                    instance_create(x, y, o_comunicacion); break;
                                case 34:
                                    instance_create(x, y, o_acueducto); break;
                                case 35:
                                    instance_create(x, y, o_basurero); break;
                                case 36:
                                    instance_create(x, y, o_turbina); break;
                                case 37:
                                    instance_create(x, y, o_caldera); break;
                                case 38:
                                    instance_create(x, y, o_mina); break;
                            }
                            s_logrado(2);
                            s_logrado(3);
                            s_desbloqueador();
                        }
                        else if(seleccion == 38){
                            aux = collision_point(x, y, o_hueco, 1, 1);
                            if(aux){
                                if(aux.x == x and aux.y == y){
                                    instance_create(x, y, o_mina);
                                    with(aux){
                                        instance_destroy();
                                    }
                                    s_desbloqueador();
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(seleccion == -1){
    if(fondos &lt; preciobulldozer){
        draw_sprite_ext(d_bulldozer, 0, x, y, 1, 1, 0, c_red, 1);
    }
    else{
        draw_sprite(d_bulldozer, 0, x, y);
    }
}
else if(dispo[seleccion] == 1){
    draw_rectangle_colour(x - 92, y - 60, x + 92, y + 60, c_green, c_green, c_green, c_green, true);
    
    if(fondos &lt; tabla[seleccion,5] or !(x &gt;= 176 and x &lt;= room_width - 128 and y &gt;= 192 and y &lt;= room_height - 96) or
            collision_rectangle(x - 68, y - 52, x + 68, y + 52, bloques, 1, 1) or
            collision_rectangle(x - 68, y - 52, x + 68, y + 52, o_piramide, 1, 1) or
            (collision_rectangle(x - 68, y - 52, x + 68, y + 52, o_hueco, 1, 1) and seleccion != 38) ){
        if(seleccion == 14 and tabla[14,6] == 0){
            draw_sprite(d_ideales, seleccion, x, y);
        }
        else{
            draw_sprite_ext(d_ideales, seleccion, x, y, 1, 1, 0, c_red, 0.7);
        }
    }
    else{
        draw_sprite(d_ideales, seleccion, x, y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
