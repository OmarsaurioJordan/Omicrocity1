<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>etereo</parentName>
  <maskName>d_basep</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gn = -1;
gv = -1;
paso = 0;
activo = false;
mobile = false;
alarm[0] = 1;
alarm[1] = 1;
mp_potential_settings(45, 15, 1, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(activo){
    instance_create(mouse_x,mouse_y,ratonlupa);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mobile){
    if(speed == 0){
        speed = choose(0, 0, 0, carrera);
        direction = irandom(359);
    }
    else{
        speed = choose(0, carrera, carrera, carrera);
        direction += irandom(90) - 45;
    }
    mobile = false;
}
alarm[1] = cambiopasos + irandom(cambiopasos);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(paso == 3){
    paso = 0;}
else{
    paso += 1;}
alarm[0] = velocitipos;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(activo){
    if(instance_exists(o_lider)){
        var xx, yy;
        if(keyboard_check(vk_right)){
            if(keyboard_check(vk_up)){
                direction = 45;
                xx = o_lider.x + lengthdir_x(cercano, direction);
                yy = o_lider.y + lengthdir_y(cercano, direction);
            }
            else if(keyboard_check(vk_down)){
                direction = 315;
                xx = o_lider.x + lengthdir_x(cercano, direction);
                yy = o_lider.y + lengthdir_y(cercano, direction);
            }
            else{
                direction = 0;
                xx = o_lider.x + lengthdir_x(cercano, direction);
                yy = o_lider.y + lengthdir_y(cercano, direction);
            }
        }
        else if(keyboard_check(vk_left)){
            if(keyboard_check(vk_up)){
                direction = 135;
                xx = o_lider.x + lengthdir_x(cercano, direction);
                yy = o_lider.y + lengthdir_y(cercano, direction);
            }
            else if(keyboard_check(vk_down)){
                direction = 225;
                xx = o_lider.x + lengthdir_x(cercano, direction);
                yy = o_lider.y + lengthdir_y(cercano, direction);
            }
            else{
                direction = 180;
                xx = o_lider.x + lengthdir_x(cercano, direction);
                yy = o_lider.y + lengthdir_y(cercano, direction);
            }
        }
        else if(keyboard_check(vk_up)){
            direction = 90;
            xx = o_lider.x + lengthdir_x(cercano, direction);
            yy = o_lider.y + lengthdir_y(cercano, direction);
        }
        else if(keyboard_check(vk_down)){
            direction = 270;
            xx = o_lider.x + lengthdir_x(cercano, direction);
            yy = o_lider.y + lengthdir_y(cercano, direction);
        }
        else{
            xx = o_lider.x;
            yy = o_lider.y;
        }
        if(point_distance(x, y, xx, yy) &gt; cercano * 0.25){
            mp_potential_step_object(xx, yy, 0, bloques);
            speed = carrera * 1.5;
        }
        else{
            speed = 0;
        }
    }
    else{
        var otrocoso;
        otrocoso = collision_circle(x, y, 5, bloques, 1, 1);
        if(!otrocoso){
            otrocoso = collision_circle(x, y, 5, etereo, 1, 1);
        }
        if(otrocoso){
            direction = point_direction(otrocoso.x, otrocoso.y, x, y);
            x += lengthdir_x(carrera * 1.5, direction);
            y += lengthdir_y(carrera * 1.5, direction);
        }
        else{
            if(keyboard_check(vk_right)){
                if(keyboard_check(vk_up)){
                    direction = 45;
                    speed = carrera * 1.5;
                }
                else if(keyboard_check(vk_down)){
                    direction = 315;
                    speed = carrera * 1.5;
                }
                else{
                    direction = 0;
                    speed = carrera * 1.5;
                }
            }
            else if(keyboard_check(vk_left)){
                if(keyboard_check(vk_up)){
                    direction = 135;
                    speed = carrera * 1.5;
                }
                else if(keyboard_check(vk_down)){
                    direction = 225;
                    speed = carrera * 1.5;
                }
                else{
                    direction = 180;
                    speed = carrera * 1.5;
                }
            }
            else if(keyboard_check(vk_up)){
                direction = 90;
                speed = carrera * 1.5;
            }
            else if(keyboard_check(vk_down)){
                direction = 270;
                speed = carrera * 1.5;
            }
            else{
                speed = 0;
            }
        }
        ss_limites(id);
    }
    if(keyboard_check_pressed(vk_anykey)){
        switch(keyboard_key){
            case vk_escape:
            case vk_space:
                activo = false;
                if(instance_exists(o_lider)){
                    x = -50;
                    y = -50;
                    speed = 0;
                }
                audio_play_sound(a_cambio, 20, false);
                instance_create(mouse_x,mouse_y,ratonlupa);
            break;
            case ord('G'):
                if(keyboard_check(vk_shift)){
                    s_reclutarnuevos("G");
                }
                else{
                    var mii;
                    mii = id;
                    with(o_policia){
                        if(point_distance(x, y, mii.x, mii.y) &lt; vision * 7){
                            s_actividades(id, "lameta");
                        }
                    }
                    if(!audio_is_playing(a_orden1) and !audio_is_playing(a_orden2)){
                        if(!audio_is_playing(a_llrefuerzos) and !audio_is_playing(a_llemergencia) and !audio_is_playing(a_lllimpiar)){
                            audio_play_sound(a_llrefuerzos, 20, false);
                        }
                    }
                }
            break;
            case ord('U'):
                if(keyboard_check(vk_shift)){
                    s_reclutarnuevos("U");
                }
                else{
                    var mii;
                    mii = id;
                    with(o_medico){
                        if(point_distance(x, y, mii.x, mii.y) &lt; vision * 7){
                            s_actividades(id, "lameta");
                        }
                    }
                    if(!audio_is_playing(a_orden1) and !audio_is_playing(a_orden2)){
                        if(!audio_is_playing(a_llrefuerzos) and !audio_is_playing(a_llemergencia) and !audio_is_playing(a_lllimpiar)){
                            audio_play_sound(a_llemergencia, 20, false);
                        }
                    }
                }
            break;
            case ord('L'):
                if(keyboard_check(vk_shift)){
                    s_reclutarnuevos("L");
                }
                else{
                    var mii;
                    mii = id;
                    with(o_limpiador){
                        if(point_distance(x, y, mii.x, mii.y) &lt; vision * 7){
                            s_actividades(id, "lameta");
                        }
                    }
                    if(!audio_is_playing(a_orden1) and !audio_is_playing(a_orden2)){
                        if(!audio_is_playing(a_llrefuerzos) and !audio_is_playing(a_llemergencia) and !audio_is_playing(a_lllimpiar)){
                            audio_play_sound(a_lllimpiar, 20, false);
                        }
                    }
                }
            break;
            case ord('E'):
                var mii;
                mii = id;
                with(ciudadano){
                    if(object_index != o_turista and object_index != o_indio){
                        if(estado != "protesta" and estado !="love"){
                            if(point_distance(x, y, mii.x, mii.y) &lt; cercano * 2){
                                s_actividades(id, "sigueme");
                            }
                        }
                    }
                }
                if(!audio_is_playing(a_orden1) and !audio_is_playing(a_orden2)){
                    if(!audio_is_playing(a_llrefuerzos) and !audio_is_playing(a_llemergencia) and !audio_is_playing(a_lllimpiar)){
                        audio_play_sound(a_orden1, 20, false);
                    }
                }
            break;
            case ord('Q'):
                with(ciudadano){
                    if(estado == "sigueme"){
                        s_actividades(id, "libre");
                    }
                }
                if(!audio_is_playing(a_orden1) and !audio_is_playing(a_orden2)){
                    if(!audio_is_playing(a_llrefuerzos) and !audio_is_playing(a_llemergencia) and !audio_is_playing(a_lllimpiar)){
                        audio_play_sound(a_orden2, 20, false);
                    }
                }
            break;
        }
    }
}
else{
    if(!instance_exists(o_lider)){
        var otrocoso;
        otrocoso = collision_circle(x, y, 5, bloques, 1, 1);
        if(!otrocoso){
            otrocoso = collision_circle(x, y, 5, etereo, 1, 1);
        }
        if(otrocoso){
            direction = point_direction(otrocoso.x, otrocoso.y, x, y);
            x += lengthdir_x(carrera, direction);
            y += lengthdir_y(carrera, direction);
        }
        else{
            s_grafo(id);
        }
        ss_limites(id);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(o_lider)){
    if(activo){
        draw_sprite(d_sombras,2,x,y);}
    draw_sprite_ext(d_raros,13+paso,x,y,1,1,0,-1,0.7);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
